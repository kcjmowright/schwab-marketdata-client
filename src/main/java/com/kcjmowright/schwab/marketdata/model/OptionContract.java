/*
 * Market Data
 * Trader API - Market data
 *
 * OpenAPI spec version: 1.0.0
 * Contact: TraderAPI@Schwab.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.kcjmowright.schwab.marketdata.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.kcjmowright.schwab.marketdata.model.ExpirationType;
import com.kcjmowright.schwab.marketdata.model.OptionDeliverables;
import com.kcjmowright.schwab.marketdata.model.SettlementType;
import io.swagger.v3.oas.annotations.media.Schema;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
/**
 * OptionContract
 */



public class OptionContract {
  /**
   * Gets or Sets putCall
   */
  public enum PutCallEnum {
    PUT("PUT"),
    CALL("CALL");

    private String value;

    PutCallEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static PutCallEnum fromValue(String input) {
      for (PutCallEnum b : PutCallEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("putCall")
  private PutCallEnum putCall = null;

  @JsonProperty("symbol")
  private String symbol = null;

  @JsonProperty("description")
  private String description = null;

  @JsonProperty("exchangeName")
  private String exchangeName = null;

  @JsonProperty("bidPrice")
  private Double bidPrice = null;

  @JsonProperty("askPrice")
  private Double askPrice = null;

  @JsonProperty("lastPrice")
  private Double lastPrice = null;

  @JsonProperty("markPrice")
  private Double markPrice = null;

  @JsonProperty("bidSize")
  private Integer bidSize = null;

  @JsonProperty("askSize")
  private Integer askSize = null;

  @JsonProperty("lastSize")
  private Integer lastSize = null;

  @JsonProperty("highPrice")
  private Double highPrice = null;

  @JsonProperty("lowPrice")
  private Double lowPrice = null;

  @JsonProperty("openPrice")
  private Double openPrice = null;

  @JsonProperty("closePrice")
  private Double closePrice = null;

  @JsonProperty("totalVolume")
  private Integer totalVolume = null;

  @JsonProperty("tradeDate")
  private BigDecimal tradeDate = null;

  @JsonProperty("quoteTimeInLong")
  private Integer quoteTimeInLong = null;

  @JsonProperty("tradeTimeInLong")
  private Integer tradeTimeInLong = null;

  @JsonProperty("netChange")
  private Double netChange = null;

  @JsonProperty("volatility")
  private Double volatility = null;

  @JsonProperty("delta")
  private Double delta = null;

  @JsonProperty("gamma")
  private Double gamma = null;

  @JsonProperty("theta")
  private Double theta = null;

  @JsonProperty("vega")
  private Double vega = null;

  @JsonProperty("rho")
  private Double rho = null;

  @JsonProperty("timeValue")
  private Double timeValue = null;

  @JsonProperty("openInterest")
  private Double openInterest = null;

  @JsonProperty("isInTheMoney")
  private Boolean isInTheMoney = null;

  @JsonProperty("theoreticalOptionValue")
  private Double theoreticalOptionValue = null;

  @JsonProperty("theoreticalVolatility")
  private Double theoreticalVolatility = null;

  @JsonProperty("isMini")
  private Boolean isMini = null;

  @JsonProperty("isNonStandard")
  private Boolean isNonStandard = null;

  @JsonProperty("optionDeliverablesList")
  private List<OptionDeliverables> optionDeliverablesList = null;

  @JsonProperty("strikePrice")
  private Double strikePrice = null;

  @JsonProperty("expirationDate")
  private String expirationDate = null;

  @JsonProperty("daysToExpiration")
  private BigDecimal daysToExpiration = null;

  @JsonProperty("expirationType")
  private ExpirationType expirationType = null;

  @JsonProperty("lastTradingDay")
  private BigDecimal lastTradingDay = null;

  @JsonProperty("multiplier")
  private Double multiplier = null;

  @JsonProperty("settlementType")
  private SettlementType settlementType = null;

  @JsonProperty("deliverableNote")
  private String deliverableNote = null;

  @JsonProperty("isIndexOption")
  private Boolean isIndexOption = null;

  @JsonProperty("percentChange")
  private Double percentChange = null;

  @JsonProperty("markChange")
  private Double markChange = null;

  @JsonProperty("markPercentChange")
  private Double markPercentChange = null;

  @JsonProperty("isPennyPilot")
  private Boolean isPennyPilot = null;

  @JsonProperty("intrinsicValue")
  private Double intrinsicValue = null;

  @JsonProperty("optionRoot")
  private String optionRoot = null;

  public OptionContract putCall(PutCallEnum putCall) {
    this.putCall = putCall;
    return this;
  }

   /**
   * Get putCall
   * @return putCall
  **/
  @Schema(description = "")
  public PutCallEnum getPutCall() {
    return putCall;
  }

  public void setPutCall(PutCallEnum putCall) {
    this.putCall = putCall;
  }

  public OptionContract symbol(String symbol) {
    this.symbol = symbol;
    return this;
  }

   /**
   * Get symbol
   * @return symbol
  **/
  @Schema(description = "")
  public String getSymbol() {
    return symbol;
  }

  public void setSymbol(String symbol) {
    this.symbol = symbol;
  }

  public OptionContract description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public OptionContract exchangeName(String exchangeName) {
    this.exchangeName = exchangeName;
    return this;
  }

   /**
   * Get exchangeName
   * @return exchangeName
  **/
  @Schema(description = "")
  public String getExchangeName() {
    return exchangeName;
  }

  public void setExchangeName(String exchangeName) {
    this.exchangeName = exchangeName;
  }

  public OptionContract bidPrice(Double bidPrice) {
    this.bidPrice = bidPrice;
    return this;
  }

   /**
   * Get bidPrice
   * @return bidPrice
  **/
  @Schema(description = "")
  public Double getBidPrice() {
    return bidPrice;
  }

  public void setBidPrice(Double bidPrice) {
    this.bidPrice = bidPrice;
  }

  public OptionContract askPrice(Double askPrice) {
    this.askPrice = askPrice;
    return this;
  }

   /**
   * Get askPrice
   * @return askPrice
  **/
  @Schema(description = "")
  public Double getAskPrice() {
    return askPrice;
  }

  public void setAskPrice(Double askPrice) {
    this.askPrice = askPrice;
  }

  public OptionContract lastPrice(Double lastPrice) {
    this.lastPrice = lastPrice;
    return this;
  }

   /**
   * Get lastPrice
   * @return lastPrice
  **/
  @Schema(description = "")
  public Double getLastPrice() {
    return lastPrice;
  }

  public void setLastPrice(Double lastPrice) {
    this.lastPrice = lastPrice;
  }

  public OptionContract markPrice(Double markPrice) {
    this.markPrice = markPrice;
    return this;
  }

   /**
   * Get markPrice
   * @return markPrice
  **/
  @Schema(description = "")
  public Double getMarkPrice() {
    return markPrice;
  }

  public void setMarkPrice(Double markPrice) {
    this.markPrice = markPrice;
  }

  public OptionContract bidSize(Integer bidSize) {
    this.bidSize = bidSize;
    return this;
  }

   /**
   * Get bidSize
   * @return bidSize
  **/
  @Schema(description = "")
  public Integer getBidSize() {
    return bidSize;
  }

  public void setBidSize(Integer bidSize) {
    this.bidSize = bidSize;
  }

  public OptionContract askSize(Integer askSize) {
    this.askSize = askSize;
    return this;
  }

   /**
   * Get askSize
   * @return askSize
  **/
  @Schema(description = "")
  public Integer getAskSize() {
    return askSize;
  }

  public void setAskSize(Integer askSize) {
    this.askSize = askSize;
  }

  public OptionContract lastSize(Integer lastSize) {
    this.lastSize = lastSize;
    return this;
  }

   /**
   * Get lastSize
   * @return lastSize
  **/
  @Schema(description = "")
  public Integer getLastSize() {
    return lastSize;
  }

  public void setLastSize(Integer lastSize) {
    this.lastSize = lastSize;
  }

  public OptionContract highPrice(Double highPrice) {
    this.highPrice = highPrice;
    return this;
  }

   /**
   * Get highPrice
   * @return highPrice
  **/
  @Schema(description = "")
  public Double getHighPrice() {
    return highPrice;
  }

  public void setHighPrice(Double highPrice) {
    this.highPrice = highPrice;
  }

  public OptionContract lowPrice(Double lowPrice) {
    this.lowPrice = lowPrice;
    return this;
  }

   /**
   * Get lowPrice
   * @return lowPrice
  **/
  @Schema(description = "")
  public Double getLowPrice() {
    return lowPrice;
  }

  public void setLowPrice(Double lowPrice) {
    this.lowPrice = lowPrice;
  }

  public OptionContract openPrice(Double openPrice) {
    this.openPrice = openPrice;
    return this;
  }

   /**
   * Get openPrice
   * @return openPrice
  **/
  @Schema(description = "")
  public Double getOpenPrice() {
    return openPrice;
  }

  public void setOpenPrice(Double openPrice) {
    this.openPrice = openPrice;
  }

  public OptionContract closePrice(Double closePrice) {
    this.closePrice = closePrice;
    return this;
  }

   /**
   * Get closePrice
   * @return closePrice
  **/
  @Schema(description = "")
  public Double getClosePrice() {
    return closePrice;
  }

  public void setClosePrice(Double closePrice) {
    this.closePrice = closePrice;
  }

  public OptionContract totalVolume(Integer totalVolume) {
    this.totalVolume = totalVolume;
    return this;
  }

   /**
   * Get totalVolume
   * @return totalVolume
  **/
  @Schema(description = "")
  public Integer getTotalVolume() {
    return totalVolume;
  }

  public void setTotalVolume(Integer totalVolume) {
    this.totalVolume = totalVolume;
  }

  public OptionContract tradeDate(BigDecimal tradeDate) {
    this.tradeDate = tradeDate;
    return this;
  }

   /**
   * Get tradeDate
   * @return tradeDate
  **/
  @Schema(description = "")
  public BigDecimal getTradeDate() {
    return tradeDate;
  }

  public void setTradeDate(BigDecimal tradeDate) {
    this.tradeDate = tradeDate;
  }

  public OptionContract quoteTimeInLong(Integer quoteTimeInLong) {
    this.quoteTimeInLong = quoteTimeInLong;
    return this;
  }

   /**
   * Get quoteTimeInLong
   * @return quoteTimeInLong
  **/
  @Schema(description = "")
  public Integer getQuoteTimeInLong() {
    return quoteTimeInLong;
  }

  public void setQuoteTimeInLong(Integer quoteTimeInLong) {
    this.quoteTimeInLong = quoteTimeInLong;
  }

  public OptionContract tradeTimeInLong(Integer tradeTimeInLong) {
    this.tradeTimeInLong = tradeTimeInLong;
    return this;
  }

   /**
   * Get tradeTimeInLong
   * @return tradeTimeInLong
  **/
  @Schema(description = "")
  public Integer getTradeTimeInLong() {
    return tradeTimeInLong;
  }

  public void setTradeTimeInLong(Integer tradeTimeInLong) {
    this.tradeTimeInLong = tradeTimeInLong;
  }

  public OptionContract netChange(Double netChange) {
    this.netChange = netChange;
    return this;
  }

   /**
   * Get netChange
   * @return netChange
  **/
  @Schema(description = "")
  public Double getNetChange() {
    return netChange;
  }

  public void setNetChange(Double netChange) {
    this.netChange = netChange;
  }

  public OptionContract volatility(Double volatility) {
    this.volatility = volatility;
    return this;
  }

   /**
   * Get volatility
   * @return volatility
  **/
  @Schema(description = "")
  public Double getVolatility() {
    return volatility;
  }

  public void setVolatility(Double volatility) {
    this.volatility = volatility;
  }

  public OptionContract delta(Double delta) {
    this.delta = delta;
    return this;
  }

   /**
   * Get delta
   * @return delta
  **/
  @Schema(description = "")
  public Double getDelta() {
    return delta;
  }

  public void setDelta(Double delta) {
    this.delta = delta;
  }

  public OptionContract gamma(Double gamma) {
    this.gamma = gamma;
    return this;
  }

   /**
   * Get gamma
   * @return gamma
  **/
  @Schema(description = "")
  public Double getGamma() {
    return gamma;
  }

  public void setGamma(Double gamma) {
    this.gamma = gamma;
  }

  public OptionContract theta(Double theta) {
    this.theta = theta;
    return this;
  }

   /**
   * Get theta
   * @return theta
  **/
  @Schema(description = "")
  public Double getTheta() {
    return theta;
  }

  public void setTheta(Double theta) {
    this.theta = theta;
  }

  public OptionContract vega(Double vega) {
    this.vega = vega;
    return this;
  }

   /**
   * Get vega
   * @return vega
  **/
  @Schema(description = "")
  public Double getVega() {
    return vega;
  }

  public void setVega(Double vega) {
    this.vega = vega;
  }

  public OptionContract rho(Double rho) {
    this.rho = rho;
    return this;
  }

   /**
   * Get rho
   * @return rho
  **/
  @Schema(description = "")
  public Double getRho() {
    return rho;
  }

  public void setRho(Double rho) {
    this.rho = rho;
  }

  public OptionContract timeValue(Double timeValue) {
    this.timeValue = timeValue;
    return this;
  }

   /**
   * Get timeValue
   * @return timeValue
  **/
  @Schema(description = "")
  public Double getTimeValue() {
    return timeValue;
  }

  public void setTimeValue(Double timeValue) {
    this.timeValue = timeValue;
  }

  public OptionContract openInterest(Double openInterest) {
    this.openInterest = openInterest;
    return this;
  }

   /**
   * Get openInterest
   * @return openInterest
  **/
  @Schema(description = "")
  public Double getOpenInterest() {
    return openInterest;
  }

  public void setOpenInterest(Double openInterest) {
    this.openInterest = openInterest;
  }

  public OptionContract isInTheMoney(Boolean isInTheMoney) {
    this.isInTheMoney = isInTheMoney;
    return this;
  }

   /**
   * Get isInTheMoney
   * @return isInTheMoney
  **/
  @Schema(description = "")
  public Boolean isIsInTheMoney() {
    return isInTheMoney;
  }

  public void setIsInTheMoney(Boolean isInTheMoney) {
    this.isInTheMoney = isInTheMoney;
  }

  public OptionContract theoreticalOptionValue(Double theoreticalOptionValue) {
    this.theoreticalOptionValue = theoreticalOptionValue;
    return this;
  }

   /**
   * Get theoreticalOptionValue
   * @return theoreticalOptionValue
  **/
  @Schema(description = "")
  public Double getTheoreticalOptionValue() {
    return theoreticalOptionValue;
  }

  public void setTheoreticalOptionValue(Double theoreticalOptionValue) {
    this.theoreticalOptionValue = theoreticalOptionValue;
  }

  public OptionContract theoreticalVolatility(Double theoreticalVolatility) {
    this.theoreticalVolatility = theoreticalVolatility;
    return this;
  }

   /**
   * Get theoreticalVolatility
   * @return theoreticalVolatility
  **/
  @Schema(description = "")
  public Double getTheoreticalVolatility() {
    return theoreticalVolatility;
  }

  public void setTheoreticalVolatility(Double theoreticalVolatility) {
    this.theoreticalVolatility = theoreticalVolatility;
  }

  public OptionContract isMini(Boolean isMini) {
    this.isMini = isMini;
    return this;
  }

   /**
   * Get isMini
   * @return isMini
  **/
  @Schema(description = "")
  public Boolean isIsMini() {
    return isMini;
  }

  public void setIsMini(Boolean isMini) {
    this.isMini = isMini;
  }

  public OptionContract isNonStandard(Boolean isNonStandard) {
    this.isNonStandard = isNonStandard;
    return this;
  }

   /**
   * Get isNonStandard
   * @return isNonStandard
  **/
  @Schema(description = "")
  public Boolean isIsNonStandard() {
    return isNonStandard;
  }

  public void setIsNonStandard(Boolean isNonStandard) {
    this.isNonStandard = isNonStandard;
  }

  public OptionContract optionDeliverablesList(List<OptionDeliverables> optionDeliverablesList) {
    this.optionDeliverablesList = optionDeliverablesList;
    return this;
  }

  public OptionContract addOptionDeliverablesListItem(OptionDeliverables optionDeliverablesListItem) {
    if (this.optionDeliverablesList == null) {
      this.optionDeliverablesList = new ArrayList<>();
    }
    this.optionDeliverablesList.add(optionDeliverablesListItem);
    return this;
  }

   /**
   * Get optionDeliverablesList
   * @return optionDeliverablesList
  **/
  @Schema(description = "")
  public List<OptionDeliverables> getOptionDeliverablesList() {
    return optionDeliverablesList;
  }

  public void setOptionDeliverablesList(List<OptionDeliverables> optionDeliverablesList) {
    this.optionDeliverablesList = optionDeliverablesList;
  }

  public OptionContract strikePrice(Double strikePrice) {
    this.strikePrice = strikePrice;
    return this;
  }

   /**
   * Get strikePrice
   * @return strikePrice
  **/
  @Schema(description = "")
  public Double getStrikePrice() {
    return strikePrice;
  }

  public void setStrikePrice(Double strikePrice) {
    this.strikePrice = strikePrice;
  }

  public OptionContract expirationDate(String expirationDate) {
    this.expirationDate = expirationDate;
    return this;
  }

   /**
   * Get expirationDate
   * @return expirationDate
  **/
  @Schema(description = "")
  public String getExpirationDate() {
    return expirationDate;
  }

  public void setExpirationDate(String expirationDate) {
    this.expirationDate = expirationDate;
  }

  public OptionContract daysToExpiration(BigDecimal daysToExpiration) {
    this.daysToExpiration = daysToExpiration;
    return this;
  }

   /**
   * Get daysToExpiration
   * @return daysToExpiration
  **/
  @Schema(description = "")
  public BigDecimal getDaysToExpiration() {
    return daysToExpiration;
  }

  public void setDaysToExpiration(BigDecimal daysToExpiration) {
    this.daysToExpiration = daysToExpiration;
  }

  public OptionContract expirationType(ExpirationType expirationType) {
    this.expirationType = expirationType;
    return this;
  }

   /**
   * Get expirationType
   * @return expirationType
  **/
  @Schema(description = "")
  public ExpirationType getExpirationType() {
    return expirationType;
  }

  public void setExpirationType(ExpirationType expirationType) {
    this.expirationType = expirationType;
  }

  public OptionContract lastTradingDay(BigDecimal lastTradingDay) {
    this.lastTradingDay = lastTradingDay;
    return this;
  }

   /**
   * Get lastTradingDay
   * @return lastTradingDay
  **/
  @Schema(description = "")
  public BigDecimal getLastTradingDay() {
    return lastTradingDay;
  }

  public void setLastTradingDay(BigDecimal lastTradingDay) {
    this.lastTradingDay = lastTradingDay;
  }

  public OptionContract multiplier(Double multiplier) {
    this.multiplier = multiplier;
    return this;
  }

   /**
   * Get multiplier
   * @return multiplier
  **/
  @Schema(description = "")
  public Double getMultiplier() {
    return multiplier;
  }

  public void setMultiplier(Double multiplier) {
    this.multiplier = multiplier;
  }

  public OptionContract settlementType(SettlementType settlementType) {
    this.settlementType = settlementType;
    return this;
  }

   /**
   * Get settlementType
   * @return settlementType
  **/
  @Schema(description = "")
  public SettlementType getSettlementType() {
    return settlementType;
  }

  public void setSettlementType(SettlementType settlementType) {
    this.settlementType = settlementType;
  }

  public OptionContract deliverableNote(String deliverableNote) {
    this.deliverableNote = deliverableNote;
    return this;
  }

   /**
   * Get deliverableNote
   * @return deliverableNote
  **/
  @Schema(description = "")
  public String getDeliverableNote() {
    return deliverableNote;
  }

  public void setDeliverableNote(String deliverableNote) {
    this.deliverableNote = deliverableNote;
  }

  public OptionContract isIndexOption(Boolean isIndexOption) {
    this.isIndexOption = isIndexOption;
    return this;
  }

   /**
   * Get isIndexOption
   * @return isIndexOption
  **/
  @Schema(description = "")
  public Boolean isIsIndexOption() {
    return isIndexOption;
  }

  public void setIsIndexOption(Boolean isIndexOption) {
    this.isIndexOption = isIndexOption;
  }

  public OptionContract percentChange(Double percentChange) {
    this.percentChange = percentChange;
    return this;
  }

   /**
   * Get percentChange
   * @return percentChange
  **/
  @Schema(description = "")
  public Double getPercentChange() {
    return percentChange;
  }

  public void setPercentChange(Double percentChange) {
    this.percentChange = percentChange;
  }

  public OptionContract markChange(Double markChange) {
    this.markChange = markChange;
    return this;
  }

   /**
   * Get markChange
   * @return markChange
  **/
  @Schema(description = "")
  public Double getMarkChange() {
    return markChange;
  }

  public void setMarkChange(Double markChange) {
    this.markChange = markChange;
  }

  public OptionContract markPercentChange(Double markPercentChange) {
    this.markPercentChange = markPercentChange;
    return this;
  }

   /**
   * Get markPercentChange
   * @return markPercentChange
  **/
  @Schema(description = "")
  public Double getMarkPercentChange() {
    return markPercentChange;
  }

  public void setMarkPercentChange(Double markPercentChange) {
    this.markPercentChange = markPercentChange;
  }

  public OptionContract isPennyPilot(Boolean isPennyPilot) {
    this.isPennyPilot = isPennyPilot;
    return this;
  }

   /**
   * Get isPennyPilot
   * @return isPennyPilot
  **/
  @Schema(description = "")
  public Boolean isIsPennyPilot() {
    return isPennyPilot;
  }

  public void setIsPennyPilot(Boolean isPennyPilot) {
    this.isPennyPilot = isPennyPilot;
  }

  public OptionContract intrinsicValue(Double intrinsicValue) {
    this.intrinsicValue = intrinsicValue;
    return this;
  }

   /**
   * Get intrinsicValue
   * @return intrinsicValue
  **/
  @Schema(description = "")
  public Double getIntrinsicValue() {
    return intrinsicValue;
  }

  public void setIntrinsicValue(Double intrinsicValue) {
    this.intrinsicValue = intrinsicValue;
  }

  public OptionContract optionRoot(String optionRoot) {
    this.optionRoot = optionRoot;
    return this;
  }

   /**
   * Get optionRoot
   * @return optionRoot
  **/
  @Schema(description = "")
  public String getOptionRoot() {
    return optionRoot;
  }

  public void setOptionRoot(String optionRoot) {
    this.optionRoot = optionRoot;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OptionContract optionContract = (OptionContract) o;
    return Objects.equals(this.putCall, optionContract.putCall) &&
        Objects.equals(this.symbol, optionContract.symbol) &&
        Objects.equals(this.description, optionContract.description) &&
        Objects.equals(this.exchangeName, optionContract.exchangeName) &&
        Objects.equals(this.bidPrice, optionContract.bidPrice) &&
        Objects.equals(this.askPrice, optionContract.askPrice) &&
        Objects.equals(this.lastPrice, optionContract.lastPrice) &&
        Objects.equals(this.markPrice, optionContract.markPrice) &&
        Objects.equals(this.bidSize, optionContract.bidSize) &&
        Objects.equals(this.askSize, optionContract.askSize) &&
        Objects.equals(this.lastSize, optionContract.lastSize) &&
        Objects.equals(this.highPrice, optionContract.highPrice) &&
        Objects.equals(this.lowPrice, optionContract.lowPrice) &&
        Objects.equals(this.openPrice, optionContract.openPrice) &&
        Objects.equals(this.closePrice, optionContract.closePrice) &&
        Objects.equals(this.totalVolume, optionContract.totalVolume) &&
        Objects.equals(this.tradeDate, optionContract.tradeDate) &&
        Objects.equals(this.quoteTimeInLong, optionContract.quoteTimeInLong) &&
        Objects.equals(this.tradeTimeInLong, optionContract.tradeTimeInLong) &&
        Objects.equals(this.netChange, optionContract.netChange) &&
        Objects.equals(this.volatility, optionContract.volatility) &&
        Objects.equals(this.delta, optionContract.delta) &&
        Objects.equals(this.gamma, optionContract.gamma) &&
        Objects.equals(this.theta, optionContract.theta) &&
        Objects.equals(this.vega, optionContract.vega) &&
        Objects.equals(this.rho, optionContract.rho) &&
        Objects.equals(this.timeValue, optionContract.timeValue) &&
        Objects.equals(this.openInterest, optionContract.openInterest) &&
        Objects.equals(this.isInTheMoney, optionContract.isInTheMoney) &&
        Objects.equals(this.theoreticalOptionValue, optionContract.theoreticalOptionValue) &&
        Objects.equals(this.theoreticalVolatility, optionContract.theoreticalVolatility) &&
        Objects.equals(this.isMini, optionContract.isMini) &&
        Objects.equals(this.isNonStandard, optionContract.isNonStandard) &&
        Objects.equals(this.optionDeliverablesList, optionContract.optionDeliverablesList) &&
        Objects.equals(this.strikePrice, optionContract.strikePrice) &&
        Objects.equals(this.expirationDate, optionContract.expirationDate) &&
        Objects.equals(this.daysToExpiration, optionContract.daysToExpiration) &&
        Objects.equals(this.expirationType, optionContract.expirationType) &&
        Objects.equals(this.lastTradingDay, optionContract.lastTradingDay) &&
        Objects.equals(this.multiplier, optionContract.multiplier) &&
        Objects.equals(this.settlementType, optionContract.settlementType) &&
        Objects.equals(this.deliverableNote, optionContract.deliverableNote) &&
        Objects.equals(this.isIndexOption, optionContract.isIndexOption) &&
        Objects.equals(this.percentChange, optionContract.percentChange) &&
        Objects.equals(this.markChange, optionContract.markChange) &&
        Objects.equals(this.markPercentChange, optionContract.markPercentChange) &&
        Objects.equals(this.isPennyPilot, optionContract.isPennyPilot) &&
        Objects.equals(this.intrinsicValue, optionContract.intrinsicValue) &&
        Objects.equals(this.optionRoot, optionContract.optionRoot);
  }

  @Override
  public int hashCode() {
    return Objects.hash(putCall, symbol, description, exchangeName, bidPrice, askPrice, lastPrice, markPrice, bidSize, askSize, lastSize, highPrice, lowPrice, openPrice, closePrice, totalVolume, tradeDate, quoteTimeInLong, tradeTimeInLong, netChange, volatility, delta, gamma, theta, vega, rho, timeValue, openInterest, isInTheMoney, theoreticalOptionValue, theoreticalVolatility, isMini, isNonStandard, optionDeliverablesList, strikePrice, expirationDate, daysToExpiration, expirationType, lastTradingDay, multiplier, settlementType, deliverableNote, isIndexOption, percentChange, markChange, markPercentChange, isPennyPilot, intrinsicValue, optionRoot);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OptionContract {\n");
    
    sb.append("    putCall: ").append(toIndentedString(putCall)).append("\n");
    sb.append("    symbol: ").append(toIndentedString(symbol)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    exchangeName: ").append(toIndentedString(exchangeName)).append("\n");
    sb.append("    bidPrice: ").append(toIndentedString(bidPrice)).append("\n");
    sb.append("    askPrice: ").append(toIndentedString(askPrice)).append("\n");
    sb.append("    lastPrice: ").append(toIndentedString(lastPrice)).append("\n");
    sb.append("    markPrice: ").append(toIndentedString(markPrice)).append("\n");
    sb.append("    bidSize: ").append(toIndentedString(bidSize)).append("\n");
    sb.append("    askSize: ").append(toIndentedString(askSize)).append("\n");
    sb.append("    lastSize: ").append(toIndentedString(lastSize)).append("\n");
    sb.append("    highPrice: ").append(toIndentedString(highPrice)).append("\n");
    sb.append("    lowPrice: ").append(toIndentedString(lowPrice)).append("\n");
    sb.append("    openPrice: ").append(toIndentedString(openPrice)).append("\n");
    sb.append("    closePrice: ").append(toIndentedString(closePrice)).append("\n");
    sb.append("    totalVolume: ").append(toIndentedString(totalVolume)).append("\n");
    sb.append("    tradeDate: ").append(toIndentedString(tradeDate)).append("\n");
    sb.append("    quoteTimeInLong: ").append(toIndentedString(quoteTimeInLong)).append("\n");
    sb.append("    tradeTimeInLong: ").append(toIndentedString(tradeTimeInLong)).append("\n");
    sb.append("    netChange: ").append(toIndentedString(netChange)).append("\n");
    sb.append("    volatility: ").append(toIndentedString(volatility)).append("\n");
    sb.append("    delta: ").append(toIndentedString(delta)).append("\n");
    sb.append("    gamma: ").append(toIndentedString(gamma)).append("\n");
    sb.append("    theta: ").append(toIndentedString(theta)).append("\n");
    sb.append("    vega: ").append(toIndentedString(vega)).append("\n");
    sb.append("    rho: ").append(toIndentedString(rho)).append("\n");
    sb.append("    timeValue: ").append(toIndentedString(timeValue)).append("\n");
    sb.append("    openInterest: ").append(toIndentedString(openInterest)).append("\n");
    sb.append("    isInTheMoney: ").append(toIndentedString(isInTheMoney)).append("\n");
    sb.append("    theoreticalOptionValue: ").append(toIndentedString(theoreticalOptionValue)).append("\n");
    sb.append("    theoreticalVolatility: ").append(toIndentedString(theoreticalVolatility)).append("\n");
    sb.append("    isMini: ").append(toIndentedString(isMini)).append("\n");
    sb.append("    isNonStandard: ").append(toIndentedString(isNonStandard)).append("\n");
    sb.append("    optionDeliverablesList: ").append(toIndentedString(optionDeliverablesList)).append("\n");
    sb.append("    strikePrice: ").append(toIndentedString(strikePrice)).append("\n");
    sb.append("    expirationDate: ").append(toIndentedString(expirationDate)).append("\n");
    sb.append("    daysToExpiration: ").append(toIndentedString(daysToExpiration)).append("\n");
    sb.append("    expirationType: ").append(toIndentedString(expirationType)).append("\n");
    sb.append("    lastTradingDay: ").append(toIndentedString(lastTradingDay)).append("\n");
    sb.append("    multiplier: ").append(toIndentedString(multiplier)).append("\n");
    sb.append("    settlementType: ").append(toIndentedString(settlementType)).append("\n");
    sb.append("    deliverableNote: ").append(toIndentedString(deliverableNote)).append("\n");
    sb.append("    isIndexOption: ").append(toIndentedString(isIndexOption)).append("\n");
    sb.append("    percentChange: ").append(toIndentedString(percentChange)).append("\n");
    sb.append("    markChange: ").append(toIndentedString(markChange)).append("\n");
    sb.append("    markPercentChange: ").append(toIndentedString(markPercentChange)).append("\n");
    sb.append("    isPennyPilot: ").append(toIndentedString(isPennyPilot)).append("\n");
    sb.append("    intrinsicValue: ").append(toIndentedString(intrinsicValue)).append("\n");
    sb.append("    optionRoot: ").append(toIndentedString(optionRoot)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
