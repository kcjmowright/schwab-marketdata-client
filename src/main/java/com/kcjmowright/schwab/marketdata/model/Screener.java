/*
 * Market Data
 * Trader API - Market data
 *
 * OpenAPI spec version: 1.0.0
 * Contact: TraderAPI@Schwab.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.kcjmowright.schwab.marketdata.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * Security info of most moved with in an index
 */
@Schema(description = "Security info of most moved with in an index")


public class Screener {
  @JsonProperty("change")
  private Double change = null;

  @JsonProperty("description")
  private String description = null;

  /**
   * Gets or Sets direction
   */
  public enum DirectionEnum {
    UP("up"),
    DOWN("down");

    private String value;

    DirectionEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static DirectionEnum fromValue(String input) {
      for (DirectionEnum b : DirectionEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("direction")
  private DirectionEnum direction = null;

  @JsonProperty("last")
  private Double last = null;

  @JsonProperty("symbol")
  private String symbol = null;

  @JsonProperty("totalVolume")
  private Long totalVolume = null;

  public Screener change(Double change) {
    this.change = change;
    return this;
  }

   /**
   * percent or value changed, by default its percent changed
   * @return change
  **/
  @Schema(description = "percent or value changed, by default its percent changed")
  public Double getChange() {
    return change;
  }

  public void setChange(Double change) {
    this.change = change;
  }

  public Screener description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Name of security
   * @return description
  **/
  @Schema(description = "Name of security")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Screener direction(DirectionEnum direction) {
    this.direction = direction;
    return this;
  }

   /**
   * Get direction
   * @return direction
  **/
  @Schema(description = "")
  public DirectionEnum getDirection() {
    return direction;
  }

  public void setDirection(DirectionEnum direction) {
    this.direction = direction;
  }

  public Screener last(Double last) {
    this.last = last;
    return this;
  }

   /**
   * what was last quoted price
   * @return last
  **/
  @Schema(description = "what was last quoted price")
  public Double getLast() {
    return last;
  }

  public void setLast(Double last) {
    this.last = last;
  }

  public Screener symbol(String symbol) {
    this.symbol = symbol;
    return this;
  }

   /**
   * schwab security symbol
   * @return symbol
  **/
  @Schema(description = "schwab security symbol")
  public String getSymbol() {
    return symbol;
  }

  public void setSymbol(String symbol) {
    this.symbol = symbol;
  }

  public Screener totalVolume(Long totalVolume) {
    this.totalVolume = totalVolume;
    return this;
  }

   /**
   * Get totalVolume
   * @return totalVolume
  **/
  @Schema(description = "")
  public Long getTotalVolume() {
    return totalVolume;
  }

  public void setTotalVolume(Long totalVolume) {
    this.totalVolume = totalVolume;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Screener screener = (Screener) o;
    return Objects.equals(this.change, screener.change) &&
        Objects.equals(this.description, screener.description) &&
        Objects.equals(this.direction, screener.direction) &&
        Objects.equals(this.last, screener.last) &&
        Objects.equals(this.symbol, screener.symbol) &&
        Objects.equals(this.totalVolume, screener.totalVolume);
  }

  @Override
  public int hashCode() {
    return Objects.hash(change, description, direction, last, symbol, totalVolume);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Screener {\n");
    
    sb.append("    change: ").append(toIndentedString(change)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    direction: ").append(toIndentedString(direction)).append("\n");
    sb.append("    last: ").append(toIndentedString(last)).append("\n");
    sb.append("    symbol: ").append(toIndentedString(symbol)).append("\n");
    sb.append("    totalVolume: ").append(toIndentedString(totalVolume)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
