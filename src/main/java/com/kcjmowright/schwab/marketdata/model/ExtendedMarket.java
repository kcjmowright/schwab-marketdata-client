/*
 * Market Data
 * Trader API - Market data
 *
 * OpenAPI spec version: 1.0.0
 * Contact: TraderAPI@Schwab.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.kcjmowright.schwab.marketdata.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.math.BigDecimal;
/**
 * Quote data for extended hours
 */
@Schema(description = "Quote data for extended hours")


public class ExtendedMarket {
  @JsonProperty("askPrice")
  private Double askPrice = null;

  @JsonProperty("askSize")
  private Integer askSize = null;

  @JsonProperty("bidPrice")
  private Double bidPrice = null;

  @JsonProperty("bidSize")
  private Integer bidSize = null;

  @JsonProperty("lastPrice")
  private Double lastPrice = null;

  @JsonProperty("lastSize")
  private Integer lastSize = null;

  @JsonProperty("mark")
  private Double mark = null;

  @JsonProperty("quoteTime")
  private Long quoteTime = null;

  @JsonProperty("totalVolume")
  private BigDecimal totalVolume = null;

  @JsonProperty("tradeTime")
  private Long tradeTime = null;

  public ExtendedMarket askPrice(Double askPrice) {
    this.askPrice = askPrice;
    return this;
  }

   /**
   * Extended market ask price
   * @return askPrice
  **/
  @Schema(example = "124.85", description = "Extended market ask price")
  public Double getAskPrice() {
    return askPrice;
  }

  public void setAskPrice(Double askPrice) {
    this.askPrice = askPrice;
  }

  public ExtendedMarket askSize(Integer askSize) {
    this.askSize = askSize;
    return this;
  }

   /**
   * Extended market ask size
   * @return askSize
  **/
  @Schema(example = "51771", description = "Extended market ask size")
  public Integer getAskSize() {
    return askSize;
  }

  public void setAskSize(Integer askSize) {
    this.askSize = askSize;
  }

  public ExtendedMarket bidPrice(Double bidPrice) {
    this.bidPrice = bidPrice;
    return this;
  }

   /**
   * Extended market bid price
   * @return bidPrice
  **/
  @Schema(example = "124.85", description = "Extended market bid price")
  public Double getBidPrice() {
    return bidPrice;
  }

  public void setBidPrice(Double bidPrice) {
    this.bidPrice = bidPrice;
  }

  public ExtendedMarket bidSize(Integer bidSize) {
    this.bidSize = bidSize;
    return this;
  }

   /**
   * Extended market bid size
   * @return bidSize
  **/
  @Schema(example = "51771", description = "Extended market bid size")
  public Integer getBidSize() {
    return bidSize;
  }

  public void setBidSize(Integer bidSize) {
    this.bidSize = bidSize;
  }

  public ExtendedMarket lastPrice(Double lastPrice) {
    this.lastPrice = lastPrice;
    return this;
  }

   /**
   * Extended market last price
   * @return lastPrice
  **/
  @Schema(example = "124.85", description = "Extended market last price")
  public Double getLastPrice() {
    return lastPrice;
  }

  public void setLastPrice(Double lastPrice) {
    this.lastPrice = lastPrice;
  }

  public ExtendedMarket lastSize(Integer lastSize) {
    this.lastSize = lastSize;
    return this;
  }

   /**
   * Regular market last size
   * @return lastSize
  **/
  @Schema(example = "51771", description = "Regular market last size")
  public Integer getLastSize() {
    return lastSize;
  }

  public void setLastSize(Integer lastSize) {
    this.lastSize = lastSize;
  }

  public ExtendedMarket mark(Double mark) {
    this.mark = mark;
    return this;
  }

   /**
   * mark price
   * @return mark
  **/
  @Schema(example = "1.1246", description = "mark price")
  public Double getMark() {
    return mark;
  }

  public void setMark(Double mark) {
    this.mark = mark;
  }

  public ExtendedMarket quoteTime(Long quoteTime) {
    this.quoteTime = quoteTime;
    return this;
  }

   /**
   * Extended market quote time in milliseconds since Epoch
   * @return quoteTime
  **/
  @Schema(example = "1621368000400", description = "Extended market quote time in milliseconds since Epoch")
  public Long getQuoteTime() {
    return quoteTime;
  }

  public void setQuoteTime(Long quoteTime) {
    this.quoteTime = quoteTime;
  }

  public ExtendedMarket totalVolume(BigDecimal totalVolume) {
    this.totalVolume = totalVolume;
    return this;
  }

   /**
   * Total volume
   * @return totalVolume
  **/
  @Schema(example = "12345", description = "Total volume")
  public BigDecimal getTotalVolume() {
    return totalVolume;
  }

  public void setTotalVolume(BigDecimal totalVolume) {
    this.totalVolume = totalVolume;
  }

  public ExtendedMarket tradeTime(Long tradeTime) {
    this.tradeTime = tradeTime;
    return this;
  }

   /**
   * Extended market trade time in milliseconds since Epoch
   * @return tradeTime
  **/
  @Schema(example = "1621368000400", description = "Extended market trade time in milliseconds since Epoch")
  public Long getTradeTime() {
    return tradeTime;
  }

  public void setTradeTime(Long tradeTime) {
    this.tradeTime = tradeTime;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExtendedMarket extendedMarket = (ExtendedMarket) o;
    return Objects.equals(this.askPrice, extendedMarket.askPrice) &&
        Objects.equals(this.askSize, extendedMarket.askSize) &&
        Objects.equals(this.bidPrice, extendedMarket.bidPrice) &&
        Objects.equals(this.bidSize, extendedMarket.bidSize) &&
        Objects.equals(this.lastPrice, extendedMarket.lastPrice) &&
        Objects.equals(this.lastSize, extendedMarket.lastSize) &&
        Objects.equals(this.mark, extendedMarket.mark) &&
        Objects.equals(this.quoteTime, extendedMarket.quoteTime) &&
        Objects.equals(this.totalVolume, extendedMarket.totalVolume) &&
        Objects.equals(this.tradeTime, extendedMarket.tradeTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(askPrice, askSize, bidPrice, bidSize, lastPrice, lastSize, mark, quoteTime, totalVolume, tradeTime);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExtendedMarket {\n");
    
    sb.append("    askPrice: ").append(toIndentedString(askPrice)).append("\n");
    sb.append("    askSize: ").append(toIndentedString(askSize)).append("\n");
    sb.append("    bidPrice: ").append(toIndentedString(bidPrice)).append("\n");
    sb.append("    bidSize: ").append(toIndentedString(bidSize)).append("\n");
    sb.append("    lastPrice: ").append(toIndentedString(lastPrice)).append("\n");
    sb.append("    lastSize: ").append(toIndentedString(lastSize)).append("\n");
    sb.append("    mark: ").append(toIndentedString(mark)).append("\n");
    sb.append("    quoteTime: ").append(toIndentedString(quoteTime)).append("\n");
    sb.append("    totalVolume: ").append(toIndentedString(totalVolume)).append("\n");
    sb.append("    tradeTime: ").append(toIndentedString(tradeTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
