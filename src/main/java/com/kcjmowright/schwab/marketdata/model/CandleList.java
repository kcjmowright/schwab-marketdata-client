/*
 * Market Data
 * Trader API - Market data
 *
 * OpenAPI spec version: 1.0.0
 * Contact: TraderAPI@Schwab.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.kcjmowright.schwab.marketdata.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.kcjmowright.schwab.marketdata.model.Candle;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
/**
 * CandleList
 */



public class CandleList {
  @JsonProperty("candles")
  private List<Candle> candles = null;

  @JsonProperty("empty")
  private Boolean empty = null;

  @JsonProperty("previousClose")
  private Double previousClose = null;

  @JsonProperty("previousCloseDate")
  private Long previousCloseDate = null;

  @JsonProperty("previousCloseDateISO8601")
  private String previousCloseDateISO8601 = null;

  @JsonProperty("symbol")
  private String symbol = null;

  public CandleList candles(List<Candle> candles) {
    this.candles = candles;
    return this;
  }

  public CandleList addCandlesItem(Candle candlesItem) {
    if (this.candles == null) {
      this.candles = new ArrayList<>();
    }
    this.candles.add(candlesItem);
    return this;
  }

   /**
   * Get candles
   * @return candles
  **/
  @Schema(description = "")
  public List<Candle> getCandles() {
    return candles;
  }

  public void setCandles(List<Candle> candles) {
    this.candles = candles;
  }

  public CandleList empty(Boolean empty) {
    this.empty = empty;
    return this;
  }

   /**
   * Get empty
   * @return empty
  **/
  @Schema(description = "")
  public Boolean isEmpty() {
    return empty;
  }

  public void setEmpty(Boolean empty) {
    this.empty = empty;
  }

  public CandleList previousClose(Double previousClose) {
    this.previousClose = previousClose;
    return this;
  }

   /**
   * Get previousClose
   * @return previousClose
  **/
  @Schema(description = "")
  public Double getPreviousClose() {
    return previousClose;
  }

  public void setPreviousClose(Double previousClose) {
    this.previousClose = previousClose;
  }

  public CandleList previousCloseDate(Long previousCloseDate) {
    this.previousCloseDate = previousCloseDate;
    return this;
  }

   /**
   * Get previousCloseDate
   * @return previousCloseDate
  **/
  @Schema(description = "")
  public Long getPreviousCloseDate() {
    return previousCloseDate;
  }

  public void setPreviousCloseDate(Long previousCloseDate) {
    this.previousCloseDate = previousCloseDate;
  }

  public CandleList previousCloseDateISO8601(String previousCloseDateISO8601) {
    this.previousCloseDateISO8601 = previousCloseDateISO8601;
    return this;
  }

   /**
   * Get previousCloseDateISO8601
   * @return previousCloseDateISO8601
  **/
  @Schema(description = "")
  public String getPreviousCloseDateISO8601() {
    return previousCloseDateISO8601;
  }

  public void setPreviousCloseDateISO8601(String previousCloseDateISO8601) {
    this.previousCloseDateISO8601 = previousCloseDateISO8601;
  }

  public CandleList symbol(String symbol) {
    this.symbol = symbol;
    return this;
  }

   /**
   * Get symbol
   * @return symbol
  **/
  @Schema(description = "")
  public String getSymbol() {
    return symbol;
  }

  public void setSymbol(String symbol) {
    this.symbol = symbol;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CandleList candleList = (CandleList) o;
    return Objects.equals(this.candles, candleList.candles) &&
        Objects.equals(this.empty, candleList.empty) &&
        Objects.equals(this.previousClose, candleList.previousClose) &&
        Objects.equals(this.previousCloseDate, candleList.previousCloseDate) &&
        Objects.equals(this.previousCloseDateISO8601, candleList.previousCloseDateISO8601) &&
        Objects.equals(this.symbol, candleList.symbol);
  }

  @Override
  public int hashCode() {
    return Objects.hash(candles, empty, previousClose, previousCloseDate, previousCloseDateISO8601, symbol);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CandleList {\n");
    
    sb.append("    candles: ").append(toIndentedString(candles)).append("\n");
    sb.append("    empty: ").append(toIndentedString(empty)).append("\n");
    sb.append("    previousClose: ").append(toIndentedString(previousClose)).append("\n");
    sb.append("    previousCloseDate: ").append(toIndentedString(previousCloseDate)).append("\n");
    sb.append("    previousCloseDateISO8601: ").append(toIndentedString(previousCloseDateISO8601)).append("\n");
    sb.append("    symbol: ").append(toIndentedString(symbol)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
