/*
 * Market Data
 * Trader API - Market data
 *
 * OpenAPI spec version: 1.0.0
 * Contact: TraderAPI@Schwab.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.kcjmowright.schwab.marketdata.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
/**
 * Partial or Custom errors per request
 */
@Schema(description = "Partial or Custom errors per request")


public class QuoteError implements QuoteResponseObject {
  @JsonProperty("invalidCusips")
  private List<String> invalidCusips = null;

  @JsonProperty("invalidSSIDs")
  private List<Long> invalidSSIDs = null;

  @JsonProperty("invalidSymbols")
  private List<String> invalidSymbols = null;

  public QuoteError invalidCusips(List<String> invalidCusips) {
    this.invalidCusips = invalidCusips;
    return this;
  }

  public QuoteError addInvalidCusipsItem(String invalidCusipsItem) {
    if (this.invalidCusips == null) {
      this.invalidCusips = new ArrayList<>();
    }
    this.invalidCusips.add(invalidCusipsItem);
    return this;
  }

   /**
   * list of invalid cusips from request
   * @return invalidCusips
  **/
  @Schema(description = "list of invalid cusips from request")
  public List<String> getInvalidCusips() {
    return invalidCusips;
  }

  public void setInvalidCusips(List<String> invalidCusips) {
    this.invalidCusips = invalidCusips;
  }

  public QuoteError invalidSSIDs(List<Long> invalidSSIDs) {
    this.invalidSSIDs = invalidSSIDs;
    return this;
  }

  public QuoteError addInvalidSSIDsItem(Long invalidSSIDsItem) {
    if (this.invalidSSIDs == null) {
      this.invalidSSIDs = new ArrayList<>();
    }
    this.invalidSSIDs.add(invalidSSIDsItem);
    return this;
  }

   /**
   * list of invalid SSIDs from request
   * @return invalidSSIDs
  **/
  @Schema(description = "list of invalid SSIDs from request")
  public List<Long> getInvalidSSIDs() {
    return invalidSSIDs;
  }

  public void setInvalidSSIDs(List<Long> invalidSSIDs) {
    this.invalidSSIDs = invalidSSIDs;
  }

  public QuoteError invalidSymbols(List<String> invalidSymbols) {
    this.invalidSymbols = invalidSymbols;
    return this;
  }

  public QuoteError addInvalidSymbolsItem(String invalidSymbolsItem) {
    if (this.invalidSymbols == null) {
      this.invalidSymbols = new ArrayList<>();
    }
    this.invalidSymbols.add(invalidSymbolsItem);
    return this;
  }

   /**
   * list of invalid symbols from request
   * @return invalidSymbols
  **/
  @Schema(description = "list of invalid symbols from request")
  public List<String> getInvalidSymbols() {
    return invalidSymbols;
  }

  public void setInvalidSymbols(List<String> invalidSymbols) {
    this.invalidSymbols = invalidSymbols;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    QuoteError quoteError = (QuoteError) o;
    return Objects.equals(this.invalidCusips, quoteError.invalidCusips) &&
        Objects.equals(this.invalidSSIDs, quoteError.invalidSSIDs) &&
        Objects.equals(this.invalidSymbols, quoteError.invalidSymbols);
  }

  @Override
  public int hashCode() {
    return Objects.hash(invalidCusips, invalidSSIDs, invalidSymbols);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class QuoteError {\n");
    
    sb.append("    invalidCusips: ").append(toIndentedString(invalidCusips)).append("\n");
    sb.append("    invalidSSIDs: ").append(toIndentedString(invalidSSIDs)).append("\n");
    sb.append("    invalidSymbols: ").append(toIndentedString(invalidSymbols)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
