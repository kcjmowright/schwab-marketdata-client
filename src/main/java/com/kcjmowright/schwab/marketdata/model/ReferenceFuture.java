/*
 * Market Data
 * Trader API - Market data
 *
 * OpenAPI spec version: 1.0.0
 * Contact: TraderAPI@Schwab.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.kcjmowright.schwab.marketdata.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.math.BigDecimal;
/**
 * Reference data of Future security
 */
@Schema(description = "Reference data of Future security")


public class ReferenceFuture {
  @JsonProperty("description")
  private String description = null;

  @JsonProperty("exchange")
  private String exchange = null;

  @JsonProperty("exchangeName")
  private String exchangeName = null;

  @JsonProperty("futureActiveSymbol")
  private String futureActiveSymbol = null;

  @JsonProperty("futureExpirationDate")
  private BigDecimal futureExpirationDate = null;

  @JsonProperty("futureIsActive")
  private Boolean futureIsActive = null;

  @JsonProperty("futureMultiplier")
  private Double futureMultiplier = null;

  @JsonProperty("futurePriceFormat")
  private String futurePriceFormat = null;

  @JsonProperty("futureSettlementPrice")
  private Double futureSettlementPrice = null;

  @JsonProperty("futureTradingHours")
  private String futureTradingHours = null;

  @JsonProperty("product")
  private String product = null;

  public ReferenceFuture description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Description of Instrument
   * @return description
  **/
  @Schema(example = "E-mini S&P 500 Index Futures,Jun-2021,ETH", description = "Description of Instrument")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public ReferenceFuture exchange(String exchange) {
    this.exchange = exchange;
    return this;
  }

   /**
   * Exchange Code
   * @return exchange
  **/
  @Schema(example = "q", description = "Exchange Code")
  public String getExchange() {
    return exchange;
  }

  public void setExchange(String exchange) {
    this.exchange = exchange;
  }

  public ReferenceFuture exchangeName(String exchangeName) {
    this.exchangeName = exchangeName;
    return this;
  }

   /**
   * Exchange Name
   * @return exchangeName
  **/
  @Schema(description = "Exchange Name")
  public String getExchangeName() {
    return exchangeName;
  }

  public void setExchangeName(String exchangeName) {
    this.exchangeName = exchangeName;
  }

  public ReferenceFuture futureActiveSymbol(String futureActiveSymbol) {
    this.futureActiveSymbol = futureActiveSymbol;
    return this;
  }

   /**
   * Active symbol
   * @return futureActiveSymbol
  **/
  @Schema(example = "/ESM21", description = "Active symbol")
  public String getFutureActiveSymbol() {
    return futureActiveSymbol;
  }

  public void setFutureActiveSymbol(String futureActiveSymbol) {
    this.futureActiveSymbol = futureActiveSymbol;
  }

  public ReferenceFuture futureExpirationDate(BigDecimal futureExpirationDate) {
    this.futureExpirationDate = futureExpirationDate;
    return this;
  }

   /**
   * Future expiration date in milliseconds since epoch
   * @return futureExpirationDate
  **/
  @Schema(example = "1623988800000", description = "Future expiration date in milliseconds since epoch")
  public BigDecimal getFutureExpirationDate() {
    return futureExpirationDate;
  }

  public void setFutureExpirationDate(BigDecimal futureExpirationDate) {
    this.futureExpirationDate = futureExpirationDate;
  }

  public ReferenceFuture futureIsActive(Boolean futureIsActive) {
    this.futureIsActive = futureIsActive;
    return this;
  }

   /**
   * Future is active
   * @return futureIsActive
  **/
  @Schema(example = "true", description = "Future is active")
  public Boolean isFutureIsActive() {
    return futureIsActive;
  }

  public void setFutureIsActive(Boolean futureIsActive) {
    this.futureIsActive = futureIsActive;
  }

  public ReferenceFuture futureMultiplier(Double futureMultiplier) {
    this.futureMultiplier = futureMultiplier;
    return this;
  }

   /**
   * Future multiplier
   * @return futureMultiplier
  **/
  @Schema(example = "50", description = "Future multiplier")
  public Double getFutureMultiplier() {
    return futureMultiplier;
  }

  public void setFutureMultiplier(Double futureMultiplier) {
    this.futureMultiplier = futureMultiplier;
  }

  public ReferenceFuture futurePriceFormat(String futurePriceFormat) {
    this.futurePriceFormat = futurePriceFormat;
    return this;
  }

   /**
   * Price format
   * @return futurePriceFormat
  **/
  @Schema(example = "D,D", description = "Price format")
  public String getFuturePriceFormat() {
    return futurePriceFormat;
  }

  public void setFuturePriceFormat(String futurePriceFormat) {
    this.futurePriceFormat = futurePriceFormat;
  }

  public ReferenceFuture futureSettlementPrice(Double futureSettlementPrice) {
    this.futureSettlementPrice = futureSettlementPrice;
    return this;
  }

   /**
   * Future Settlement Price
   * @return futureSettlementPrice
  **/
  @Schema(example = "4123", description = "Future Settlement Price")
  public Double getFutureSettlementPrice() {
    return futureSettlementPrice;
  }

  public void setFutureSettlementPrice(Double futureSettlementPrice) {
    this.futureSettlementPrice = futureSettlementPrice;
  }

  public ReferenceFuture futureTradingHours(String futureTradingHours) {
    this.futureTradingHours = futureTradingHours;
    return this;
  }

   /**
   * Trading Hours
   * @return futureTradingHours
  **/
  @Schema(example = "GLBX(de=1640;0=-1700151515301600;1=r-17001515r15301600d-15551640;7=d-16401555)", description = "Trading Hours")
  public String getFutureTradingHours() {
    return futureTradingHours;
  }

  public void setFutureTradingHours(String futureTradingHours) {
    this.futureTradingHours = futureTradingHours;
  }

  public ReferenceFuture product(String product) {
    this.product = product;
    return this;
  }

   /**
   * Futures product symbol
   * @return product
  **/
  @Schema(example = "/ES", description = "Futures product symbol")
  public String getProduct() {
    return product;
  }

  public void setProduct(String product) {
    this.product = product;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ReferenceFuture referenceFuture = (ReferenceFuture) o;
    return Objects.equals(this.description, referenceFuture.description) &&
        Objects.equals(this.exchange, referenceFuture.exchange) &&
        Objects.equals(this.exchangeName, referenceFuture.exchangeName) &&
        Objects.equals(this.futureActiveSymbol, referenceFuture.futureActiveSymbol) &&
        Objects.equals(this.futureExpirationDate, referenceFuture.futureExpirationDate) &&
        Objects.equals(this.futureIsActive, referenceFuture.futureIsActive) &&
        Objects.equals(this.futureMultiplier, referenceFuture.futureMultiplier) &&
        Objects.equals(this.futurePriceFormat, referenceFuture.futurePriceFormat) &&
        Objects.equals(this.futureSettlementPrice, referenceFuture.futureSettlementPrice) &&
        Objects.equals(this.futureTradingHours, referenceFuture.futureTradingHours) &&
        Objects.equals(this.product, referenceFuture.product);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, exchange, exchangeName, futureActiveSymbol, futureExpirationDate, futureIsActive, futureMultiplier, futurePriceFormat, futureSettlementPrice, futureTradingHours, product);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ReferenceFuture {\n");
    
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    exchange: ").append(toIndentedString(exchange)).append("\n");
    sb.append("    exchangeName: ").append(toIndentedString(exchangeName)).append("\n");
    sb.append("    futureActiveSymbol: ").append(toIndentedString(futureActiveSymbol)).append("\n");
    sb.append("    futureExpirationDate: ").append(toIndentedString(futureExpirationDate)).append("\n");
    sb.append("    futureIsActive: ").append(toIndentedString(futureIsActive)).append("\n");
    sb.append("    futureMultiplier: ").append(toIndentedString(futureMultiplier)).append("\n");
    sb.append("    futurePriceFormat: ").append(toIndentedString(futurePriceFormat)).append("\n");
    sb.append("    futureSettlementPrice: ").append(toIndentedString(futureSettlementPrice)).append("\n");
    sb.append("    futureTradingHours: ").append(toIndentedString(futureTradingHours)).append("\n");
    sb.append("    product: ").append(toIndentedString(product)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
